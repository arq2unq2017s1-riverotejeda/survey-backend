group 'unq.university.survey'
version '0.0.2-SNAPSHOT'


buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

repositories {
    mavenCentral()
    mavenLocal()
}

mainClassName = 'unq.api.service.ApiService'

dependencies {

    // spark framework and dependencies
    compile('com.sparkjava:spark-core:2.5')
    compile 'com.google.code.gson:gson:2.7'

    //logs
    compile('ch.qos.logback:logback-classic:1.1.7')
    compile group: 'org.codehaus.janino', name: 'janino', version: '3.0.6'
    compile group: 'org.logback-extensions', name: 'logback-ext-loggly', version: '0.1.4'
    compile group: 'com.librato.metrics', name: 'librato-java', version: '2.0.5'

    //DB
    //compile 'org.mongodb:mongodb-driver:3.3.0'
    compile group: 'com.despegar.integration', name: 'mongo-connector', version: '1.1.10'

    //Utils
    //compile group: 'joda-time', name: 'joda-time', version: '2.9.4'
    compile group: 'com.typesafe', name: 'config', version: '1.3.1'
    compile group: 'javax.mail', name: 'mail', version: '1.4.1'

    compile group: 'com.sun.jersey', name: 'jersey-client', version: '1.9.1'
    compile 'com.google.guava:guava:20.0'

    //Security
    compile group: 'javax.xml.crypto', name: 'jsr105-api', version: '1.0.1'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'

    //Test
    compile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'
    compile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.6'
    compile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.6'




}

//create a single Jar with all dependencies
task deploy(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Survey',
                'Implementation-Version': version,
                'Main-Class': 'unq.api.service.ApiService'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude('META-INF/*.SF')
    exclude('META-INF/*.DSA')
    exclude('META-INF/*.RSA')
    with jar
}

//Heroku task
task stage {
    dependsOn clean, deploy
}